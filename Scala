import java.io._
class Persona(var nombre: String, var edad: Int) extends Serializable
object ClasesPersistentes {

  // Método para guardar una lista de personas en un archivo
  def guardarPersonas(personas: List[Persona], archivo: String): Unit = {
    val fileOutputStream = new FileOutputStream(archivo)
    val objectOutputStream = new ObjectOutputStream(fileOutputStream)
    objectOutputStream.writeObject(personas)
    objectOutputStream.close()
    fileOutputStream.close()
  }
  // Método para cargar una lista de personas desde un archivo
  def cargarPersonas(archivo: String): List[Persona] = {
    try {
      val fileInputStream = new FileInputStream(archivo)
      val objectInputStream = new ObjectInputStream(fileInputStream)
      val personas = objectInputStream.readObject().asInstanceOf[List[Persona]]
      objectInputStream.close()
      fileInputStream.close()
      personas
    } catch {
      case _: FileNotFoundException => List()
    }
  }

  def main(args: Array[String]): Unit = {
    // Crear algunas personas
    val personas = List(
      new Persona("Juan", 25),
      new Persona("Maria", 30),
      new Persona("Pedro", 22)
    )

    // Guardar personas en un archivo
    guardarPersonas(personas, "personas.dat")

    // Cargar personas desde el archivo
    val personasCargadas = cargarPersonas("personas.dat")

    // Mostrar las personas cargadas
    personasCargadas.foreach(persona => println(s"Nombre: ${persona.nombre}, Edad: ${persona.edad}"))
  }
}
